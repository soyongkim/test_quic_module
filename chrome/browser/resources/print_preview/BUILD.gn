# Copyright 2018 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/chromeos/ui_mode.gni")
import("//chrome/common/features.gni")
import("//printing/buildflags/buildflags.gni")
import("//tools/grit/grit_rule.gni")
import("//tools/grit/preprocess_if_expr.gni")
import("//tools/polymer/html_to_js.gni")
import("//tools/typescript/ts_library.gni")
import("//ui/webui/resources/tools/generate_grd.gni")
import("../tools/optimize_webui.gni")
import("./print_preview.gni")

assert(enable_print_preview, "enable_print_preview check failed")

preprocess_folder = "preprocessed"
preprocess_pdf_manifest = "preprocessed_pdf_manifest.json"
preprocess_pdf_gen_manifest = "preprocessed_pdf_gen_manifest.json"

if (optimize_webui) {
  build_manifest = "build_manifest.json"

  optimize_webui("build") {
    host = "print"
    input = rebase_path("$target_gen_dir/tsc", root_build_dir)
    js_out_files = [ "print_preview.rollup.js" ]
    js_module_in_files = [ "print_preview.js" ]
    out_manifest = "$target_gen_dir/$build_manifest"

    deps = [
      ":build_ts",
      "../../../../ui/webui/resources:preprocess",
    ]
    excludes = [
      "chrome://resources/js/cr.m.js",
      "pdf/pdf_scripting_api.js",
    ]
  }
}

generate_grd("build_grd") {
  input_files = [ "print_preview.html" ]
  input_files_base_dir = rebase_path(".", "//")
  deps = [
    ":preprocess_pdf",
    ":preprocess_pdf_generated",
  ]
  manifest_files = [
    "$target_gen_dir/$preprocess_pdf_manifest",
    "$target_gen_dir/$preprocess_pdf_gen_manifest",
  ]
  resource_path_rewrites = [
    "pdf/index_pp.html|pdf/index.html",

    # Expose pdf_viewer_pp.js as pdf_viewer_wrapper.js so that the PDF viewer
    # and Print Preview viewer can use the same main.js source.
    "pdf/pdf_viewer_pp.js|pdf/pdf_viewer_wrapper.js",
  ]
  if (optimize_webui) {
    deps += [ ":build" ]
    resource_path_rewrites += [ "print_preview.rollup.js|print_preview.js" ]
    manifest_files += [ "$target_gen_dir/$build_manifest" ]
  } else {
    deps += [ ":build_ts" ]
    manifest_files += [ "$target_gen_dir/tsconfig.manifest" ]
  }
  grd_prefix = "print_preview"
  out_grd = "$target_gen_dir/${grd_prefix}_resources.grd"
}

html_to_js("web_components") {
  js_files = web_component_files
}

preprocess_if_expr("preprocess") {
  in_folder = "./"
  out_folder = "$target_gen_dir/$preprocess_folder"
  in_files = non_web_component_files
}

preprocess_if_expr("preprocess_generated") {
  deps = [ ":web_components" ]
  in_folder = target_gen_dir
  out_folder = "$target_gen_dir/$preprocess_folder"
  in_files = web_component_files
}

preprocess_if_expr("preprocess_pdf") {
  in_folder = "../"
  out_folder = "$target_gen_dir/$preprocess_folder"
  out_manifest = "$target_gen_dir/$preprocess_pdf_manifest"
  in_files = [
    "pdf/browser_api.js",
    "pdf/constants.js",
    "pdf/controller.js",
    "pdf/gesture_detector.js",
    "pdf/index.css",
    "pdf/index_pp.html",
    "pdf/internal_plugin.js",
    "pdf/main.js",
    "pdf/metrics.js",
    "pdf/open_pdf_params_parser.js",
    "pdf/pdf_scripting_api.js",
    "pdf/pdf_viewer_utils.js",
    "pdf/pdf_viewer_base.js",
    "pdf/toolbar_manager.js",
    "pdf/viewport.js",
    "pdf/viewport_scroller.js",
    "pdf/zoom_manager.js",
  ]
}

preprocess_if_expr("preprocess_pdf_generated") {
  deps = [ "../pdf:web_components" ]
  in_folder = get_path_info("..", "gen_dir")
  out_folder = "$target_gen_dir/$preprocess_folder"
  out_manifest = "$target_gen_dir/$preprocess_pdf_gen_manifest"
  in_files = [
    "pdf/elements/icons.js",
    "pdf/elements/shared-vars.js",
    "pdf/elements/viewer-error-dialog.js",
    "pdf/elements/viewer-page-indicator.js",
    "pdf/elements/viewer-zoom-button.js",
    "pdf/elements/viewer-zoom-toolbar.js",
    "pdf/pdf_viewer_pp.js",
    "pdf/pdf_viewer_shared_style.js",
  ]
}

grit("resources") {
  defines = chrome_grit_defines

  # These arguments are needed since the grd is generated at build time.
  enable_input_discovery_for_gn_analyze = false
  source = "$target_gen_dir/print_preview_resources.grd"
  deps = [ ":build_grd" ]

  outputs = [
    "grit/print_preview_resources.h",
    "grit/print_preview_resources_map.cc",
    "grit/print_preview_resources_map.h",
    "print_preview_resources.pak",
  ]
  output_dir = "$root_gen_dir/chrome"
}

copy("copy_pdf_definitions") {
  sources = [ "../pdf/pdf_scripting_api.d.ts" ]
  outputs = [ "$target_gen_dir/$preprocess_folder/pdf/{{source_file_part}}" ]
}

ts_library("build_ts") {
  root_dir = "$target_gen_dir/$preprocess_folder"
  out_dir = "$target_gen_dir/tsc"
  composite = true
  tsconfig_base = "tsconfig_base.json"
  in_files = web_component_files + non_web_component_files

  deps = [
    "//third_party/polymer/v3_0:library",
    "//ui/webui/resources:library",
  ]

  definitions = [
    "//tools/typescript/definitions/chrome_send.d.ts",
    "$target_gen_dir/$preprocess_folder/pdf/pdf_scripting_api.d.ts",
  ]

  extra_deps = [
    ":copy_pdf_definitions",
    ":preprocess",
    ":preprocess_generated",
    ":preprocess_pdf",
  ]
}
